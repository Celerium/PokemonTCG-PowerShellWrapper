<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="1797" errors="0" failures="1" not-run="3" inconclusive="0" ignored="0" skipped="7" invalid="0" date="2024-11-03" time="09:38:13">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.22631" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="69.8992" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\HelpComment.Tests.ps1" executed="True" result="Ignored" success="True" time="1.8264" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Ignored" success="True" time="0.743" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Add-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains comment based help" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a description" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains at least one usage example" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a note" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a link" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Add-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGApiKey ] - Parameter has a description - [ ApiKey ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Parameter has a description - [ ApiKey ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0084" asserts="0" description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.0769" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ]" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains at least one usage example" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a note" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ BaseURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ BaseURI ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0076" asserts="0" description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.1129" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ]" executed="True" result="Success" success="True" time="0.0294" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains comment based help" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ resourceURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ resourceURI ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ uriFilter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ uriFilter ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.1483" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0091" asserts="0" description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.1824" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.006" asserts="0" description="[ Get-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGApiKey ] - Parameter has a description - [ plainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Parameter has a description - [ plainText ]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0056" asserts="0" description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.2138" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ]" executed="True" result="Ignored" success="True" time="0.0276" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a link" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Parameter has a description -" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.2805" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ]" executed="True" result="Success" success="True" time="0.0619" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGCard ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a note" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="[ Get-PokemonTCGCard ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ id ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ id ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ select ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ select ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ q ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ q ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ orderBy ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ orderBy ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ page ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ page ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ pageSize ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ pageSize ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ allPages ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 7  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 7  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.3214" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a synopsis" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ openConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ openConfFile ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.3615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ]" executed="True" result="Ignored" success="True" time="0.0364" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGRarity ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains comment based help" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a note" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Parameter has a description -" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.4225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ]" executed="True" result="Success" success="True" time="0.0574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSet ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="[ Get-PokemonTCGSet ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ id ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ id ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ select ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ select ]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ q ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ q ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ orderBy ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ orderBy ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ page ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ pageSize ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0195" asserts="0" description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.4571" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ]" executed="True" result="Ignored" success="True" time="0.031" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSubtype ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a link" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Parameter has a description -" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.4917" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ]" executed="True" result="Ignored" success="True" time="0.031" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSupertype ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains at least one usage example" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Parameter has a description -" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.5264" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ]" executed="True" result="Ignored" success="True" time="0.0311" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGType ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a synopsis" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a link" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Parameter has a description -" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0057" asserts="0" description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.5653" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.009" asserts="0" description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.6043" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ]">
                    <results>
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ method ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ method ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ resourceURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ resourceURI ]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ uriFilter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ uriFilter ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ data ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ data ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ allPages ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.6372" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ]" executed="True" result="Ignored" success="True" time="0.0293" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains at least one usage example" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a note" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Parameter has a description -" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0029" asserts="0" description="[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="0.67" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ]" executed="True" result="Ignored" success="True" time="0.0291" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains at least one usage example" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a note" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a link" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Parameter has a description -" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.7057" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a synopsis" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a description" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a note" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ andVariables ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ andVariables ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="0.7393" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Test-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="[ Test-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-PokemonTCGApiKey ] - Parameter has a description - [ BaseURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Parameter has a description - [ BaseURI ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PokemonTCG.Tests.ps1" executed="True" result="Success" success="True" time="0.1856" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PokemonTCG.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0936" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data" executed="True" result="Success" success="True" time="0.0634" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test" executed="True" result="Success" success="True" time="0.0899" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Module contains only PowerShell files" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Module files exist" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Should import successfully" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Failure" success="False" time="66.4853" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Failure" success="False" time="64.9461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="2.9244" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0824" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1281" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1681" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2138" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.299" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.344" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4829" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5277" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5721" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6794" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7249" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7518" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7775" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8179" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.838" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8573" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8776" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9399" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9881" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0092" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0299" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0506" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1492" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2719" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0293" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3174" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0283" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3937" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4908" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5368" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5829" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6281" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7261" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7831" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8861" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.946" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0543" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9959" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0552" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0488" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1106" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0493" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.166" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2121" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2589" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.4088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.4544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.4984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5471" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5931" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6383" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6918" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0495" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7371" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7866" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8313" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8768" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.9208" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="6.2179" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0507" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0974" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1942" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5025" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5993" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7117" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0616" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0616" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7817" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0198" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8063" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8378" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8851" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.012" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0596" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1086" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2069" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3046" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3536" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4965" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5439" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5907" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6393" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6934" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7407" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7934" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.843" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8908" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9382" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9878" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0388" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1364" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1856" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2256" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2727" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3094" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3572" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4056" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4712" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5246" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0295" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6101" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7025" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7515" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.8014" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.8542" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9499" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9971" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0487" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0953" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.144" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.1904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.2392" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.29" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="8.9386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0769" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1213" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1714" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2163" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3499" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4864" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5313" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5773" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6246" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6845" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0554" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.729" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7722" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7927" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8132" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8964" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.917" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9373" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9576" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9782" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9992" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0196" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0399" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0605" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0806" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1017" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1792" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2237" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3155" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4053" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4499" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4959" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5441" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6777" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7668" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8156" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8597" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9049" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9499" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0432" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0866" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.176" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2198" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3569" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4005" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4445" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4919" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5367" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5815" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6264" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7171" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="11.8885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0858" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1301" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1774" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2662" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.314" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3583" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5866" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6307" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.735" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7554" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7762" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7963" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8176" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8378" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8586" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8802" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0454" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1369" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1812" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2263" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2721" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3168" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4098" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4509" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.543" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6987" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7469" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7871" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8202" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8669" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9199" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9709" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0138" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0577" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1466" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1893" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2797" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3235" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3674" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4128" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5039" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5469" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.592" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6361" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7245" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8142" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8576" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9019" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="14.6982" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1354" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.364" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4085" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4978" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5404" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5852" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6344" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0592" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0592" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7593" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.78" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8004" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8426" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.864" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8849" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9057" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9263" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9472" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0086" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0287" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.049" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1215" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1649" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2546" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3484" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3924" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4368" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4807" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5252" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5691" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6175" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7532" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7975" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9314" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9764" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.021" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0654" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.248" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2924" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3445" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3985" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4915" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5786" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6707" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7603" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8059" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="17.541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1144" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0572" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2106" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3024" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0282" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4251" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4705" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5167" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5641" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6093" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6548" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0592" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0592" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7605" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8237" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8651" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8861" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9077" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9492" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.97" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9907" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.011" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0325" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0849" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1289" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1733" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2622" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3819" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4259" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5184" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6079" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6533" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6988" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7492" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7921" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8401" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8868" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9336" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0236" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0959" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1782" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2229" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3125" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4053" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4943" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5394" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6138" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6588" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7029" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7502" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="20.3384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0897" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1207" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1656" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2105" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3019" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.395" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.483" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5728" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6206" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6867" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0616" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0616" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7481" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8103" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8308" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8514" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8718" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8927" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9138" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9343" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9865" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0082" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0288" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0703" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.137" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1853" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2308" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2756" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3228" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3665" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4153" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4596" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5036" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5483" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5932" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6383" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6758" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7196" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8569" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9024" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9477" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9927" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0411" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0967" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0513" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0513" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1416" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1862" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2736" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3227" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3672" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4118" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4569" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6401" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7405" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.793" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="23.595" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1008" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.197" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2423" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2892" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3362" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3805" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4266" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0236" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5419" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.586" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.061" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8359" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8843" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9298" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9737" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0189" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.063" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.107" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1547" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1991" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2434" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2886" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3338" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4053" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4938" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5382" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5865" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6312" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6766" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7214" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7653" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8102" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9005" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9454" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0836" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1278" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1723" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3045" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4161" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0539" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0539" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4738" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0516" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5273" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5743" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6247" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7735" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8236" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8718" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9617" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0065" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0519" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1167" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1632" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2524" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="26.7221" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1391" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2325" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2814" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3257" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3704" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4159" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.553" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5978" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.643" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7072" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.749" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8104" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8315" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8525" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9514" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9997" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0447" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0849" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0529" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0529" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1967" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0491" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3013" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3959" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.546" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.634" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7693" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8137" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8581" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9464" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.994" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0377" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0814" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1253" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1689" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2159" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2591" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3478" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3929" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4893" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5799" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6721" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7157" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8061" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8513" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9863" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0327" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0767" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1201" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="29.405" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0906" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1346" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2259" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2668" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.318" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4545" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5929" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6377" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7006" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.059" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7435" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7644" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.785" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8056" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8288" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0189" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8708" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9578" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0152" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0344" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0537" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.073" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0931" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1136" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1746" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2207" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2683" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3465" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0334" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3894" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4809" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5256" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5696" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6136" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7048" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7488" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.793" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8835" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.926" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9697" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0135" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1009" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1489" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1937" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2375" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2814" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3251" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3724" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4158" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4591" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5021" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5896" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6363" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6793" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="32.3741" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0786" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1234" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.168" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.212" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2997" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3465" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3906" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4353" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5238" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.676" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0571" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7179" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7383" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7587" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7791" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7996" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8199" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8403" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.861" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8815" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9019" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9301" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0196" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0637" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2006" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2464" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2906" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3833" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4283" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4733" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5175" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.563" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7012" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7459" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7908" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8388" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9307" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9756" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0204" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0641" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1113" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1562" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2004" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2453" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2922" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3422" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3881" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.48" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5266" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5762" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6313" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7262" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7708" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8232" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8734" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9178" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9656" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="35.495" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1434" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2381" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.327" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4213" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4668" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5144" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6104" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7196" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0583" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0583" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7628" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7846" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8064" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8785" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9241" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9686" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0164" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1084" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.153" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1983" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2468" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3358" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5599" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6481" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6769" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.025" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.025" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7213" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7618" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8094" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8951" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9396" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0767" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1211" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2514" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2967" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3456" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4351" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5258" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5708" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6149" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7537" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7988" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8464" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8905" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9357" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9799" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0253" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0677" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1134" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="38.6155" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0886" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1336" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1782" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2254" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2696" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3137" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3575" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.494" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5381" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5829" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6288" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6731" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7204" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7645" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8087" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8529" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8974" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9448" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9899" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0789" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1232" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1671" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1937" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2817" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3267" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3747" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4187" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4625" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5061" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5944" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6418" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6859" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7292" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7729" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8166" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9053" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9521" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0392" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1273" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1753" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2184" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2619" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.307" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3516" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3993" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4431" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4888" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5789" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6261" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6706" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7599" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8481" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8951" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9389" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9829" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.026" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1167" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="41.5742" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0832" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1726" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2173" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2623" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3099" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.354" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3992" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5808" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6255" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0588" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0588" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7319" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7528" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7944" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8358" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.877" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9491" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9931" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0373" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0864" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.131" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1744" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3567" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4008" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4456" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5354" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5812" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6091" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6552" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7003" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7442" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7887" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8337" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8819" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9272" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0605" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1078" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1527" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2393" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2843" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3791" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4675" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5056" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0341" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5951" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6389" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6829" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7303" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7745" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8616" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="44.5457" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.0882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.1321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.1766" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.2063" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.2503" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.2952" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.3399" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.3731" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.4179" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.4618" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.5061" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.5513" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.5946" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.6565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0577" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0577" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.6979" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7406" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7869" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.8311" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.8749" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.9198" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.9641" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.0119" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.0568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.1024" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.1472" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.1786" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.2229" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.2676" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.3113" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.3558" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.4018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.4295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.4751" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.5203" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.5651" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.6012" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.6462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.6911" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.7362" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.7854" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.8272" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.858" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.9027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.9475" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.9956" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.0396" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.0841" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.1285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.1734" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.2183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.2699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.3156" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.3602" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.4052" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.45" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.4935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.5416" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.5854" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.6297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.6748" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.7191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.7639" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8133" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8802" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0204" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.9245" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.9678" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="47.3283" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.0716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.1147" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.1584" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.2029" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.2489" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.2961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.3402" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.3861" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.4306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.4752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.5228" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.5666" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.6107" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.6713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0567" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0567" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.719" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.76" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.7827" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0182" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8029" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8234" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8433" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8634" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8837" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9241" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9641" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9844" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0441" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0847" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1247" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1548" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.026" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1994" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.2438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.2888" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.3334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.3801" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.4249" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.4695" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.5158" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.5605" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.6084" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.6527" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.6972" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.7422" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.787" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.8312" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.8786" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.9298" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.049" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.0295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.074" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.125" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.1735" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.2243" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.2884" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0575" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.3415" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.3952" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0489" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.4411" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.4859" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.5371" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.5923" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0499" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.6417" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.687" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.7328" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.7784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="50.3273" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.0918" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.1396" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.1842" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.2295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.2684" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.3127" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.3571" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.4023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.4484" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.4935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.5192" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.5642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.6083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.672" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0598" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0598" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7139" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7352" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7763" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8026" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.938" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.983" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.0282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.0538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.0987" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.1426" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.1876" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.2322" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.279" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.3275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.3726" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.418" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.4632" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.5082" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.5523" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.6014" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.6454" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.6902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.7355" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.7682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.8126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.8575" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9028" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9932" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.0421" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.0831" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.1077" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.1518" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.1968" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.2419" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.2873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.3395" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.385" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.4309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.4765" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.509" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0285" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.553" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.5977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.6438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.6784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.7217" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.7661" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.811" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.8582" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.9038" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.9532" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.9948" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="53.1858" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.0961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.1403" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.1859" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.2289" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.2557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0186" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.2996" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.3428" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.4294" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.4729" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.516" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.6079" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.673" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7123" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7532" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7732" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.794" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8139" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8337" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8741" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8947" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9153" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9362" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9653" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.0096" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.0563" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.1022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.1476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.1963" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.24" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.2838" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.3274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.371" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.4188" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.4615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.5049" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.5485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.5928" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.6417" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.6856" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.7313" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.7771" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.8228" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.8707" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.9152" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.9596" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.0042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.0432" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.1335" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.1788" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.2283" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.2728" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.3171" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.3612" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.406" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.455" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.4956" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.5437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.5869" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.6307" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.6747" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.7174" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.7658" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.8103" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.8547" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="55.9915" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.0927" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.1371" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.1815" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.2262" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.2699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.3178" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.3616" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.4064" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.4507" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.4939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.5392" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.5872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.6322" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.6972" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.061" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.7377" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.7579" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.7888" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.812" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.018" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.8353" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.8564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.88" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9005" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9208" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9409" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9613" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9817" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0217" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0423" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.1084" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.1282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.1642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0321" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.208" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.251" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.2988" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.3425" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.3853" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.4295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.4736" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.5215" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.5648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.6088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.652" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.6989" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.7522" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.797" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.8417" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.8855" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.9299" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.9795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.0242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.0717" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.1204" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.1673" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.2169" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.2623" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.3072" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.3528" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.3992" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.448" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.4935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.5376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.5823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.627" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.6726" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.7172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.7528" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.802" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="58.8023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.088" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.1183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.1629" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.2111" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.2572" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.3031" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.3535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.3985" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.4429" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.4873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.5322" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.5798" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.6229" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.7874" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.1602" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.1602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.8307" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.8511" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.8714" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.8917" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.9123" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.9321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.9522" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0048" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0436" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0625" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0815" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1009" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1197" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1385" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1582" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1787" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1985" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.2185" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.2468" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.2904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.3347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.3783" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.4225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.4716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.5159" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.6052" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.6496" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.6965" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.7405" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.7859" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.8302" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.8734" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.9199" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.9631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.0077" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.0518" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.0956" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.1435" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.188" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.2321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.2765" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.3191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.3651" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.4122" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.4561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.4999" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.5438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.5872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.6338" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.6788" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.7218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.7638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.8072" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Failure" success="False" time="61.8645" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.0765" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.1203" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.1649" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.2106" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.2557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.3023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.3464" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.3903" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.4342" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.4785" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.5251" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.5689" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.6131" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.6565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.7457" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.7889" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.8347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.8792" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.9231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.9706" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.0146" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.0586" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.1027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.1461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.2172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0671" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0671" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.2611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.2878" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.3278" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.3468" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.3675" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.415" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.4584" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.5019" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.5461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.6165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0664" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0664" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.6606" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.6806" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7013" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7212" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7465" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.8349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.8776" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.9256" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.9701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.0609" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.1052" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.1501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.1983" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.2428" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.2866" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.3318" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.3778" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.4219" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.4644" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.5162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.5605" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Failure" success="False" time="2.6545" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Failure" success="False" time="0.0897" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0897" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>[0] Expected 0, but got 2.
[1] Expected 'PokemonTCG.psd1 - 107', but got 107.
[2] Expected strings to be the same, but they were different.
Expected length: 21
Actual length:   94
Strings differ at index 0.
Expected: 'PokemonTCG.psd1 - 107'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for FunctionsToExport.  '
           ^
[3] Expected 'PokemonTCG.psd1 - 116', but got 116.
[4] Expected strings to be the same, but they were different.
Expected length: 21
Actual length:   92
Strings differ at index 0.
Expected: 'PokemonTCG.psd1 - 116'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for AliasesToExport.  '
           ^</message>
                              <stack-trace>[0] at ($invoke_Results | Measure-Object).Count | Should -Be 0, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
[1] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[2] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
[3] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[4] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.707" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.7496" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.7933" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.8361" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.8803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.9238" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.9679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.0119" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.0586" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="64.9425" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.0873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.132" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.1795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.223" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.2671" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.3105" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.3539" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.3993" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.4424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.4857" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.5298" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.573" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.616" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.6618" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7481" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7918" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.835" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.8784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.9698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0131" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0562" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0999" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.143" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.1887" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.2317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.2752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.3185" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.3612" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.4069" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.4497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.5365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.5806" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.6231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.6688" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.7117" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.7559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.7985" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.8421" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.8882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.9316" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.9758" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.0191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.0631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1513" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1946" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.2379" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.2802" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.3226" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.3682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.411" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.4544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.5426" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.5852" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.6324" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.6774" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.7208" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.764" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.8073" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.8559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.8988" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.9422" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.9856" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="3.0288" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="3.0744" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Add-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1106" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Add-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0182" asserts="0" description="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-PokemonTCGAPIKey ] should have an alias of [ Set-PokemonTCGApiKey ]" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.[ Add-PokemonTCGAPIKey ] should have an alias of [ Set-PokemonTCGApiKey ]" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -ApiKey ] should accept a value from the pipeline" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.[ -ApiKey ] should accept a value from the pipeline" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When the parameter [ -ApiKey ] is called it should not return empty" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.When the parameter [ -ApiKey ] is called it should not return empty" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Get-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1005" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Get-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function" executed="True" result="Success" success="True" time="0.02" asserts="0" description="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function">
                <results>
                  <test-case description="When the parameter [ -ApiKey] is called it should not return empty" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.When the parameter [ -ApiKey] is called it should not return empty" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -ApiKey ] should return a secure string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Pipeline  - [ -ApiKey ] should return a secure string" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -ApiKey ] should return a secure string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Parameter - [ -ApiKey ] should return a secure string" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -plainText ] should return [ -ApiKey ] as a string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Using [ -plainText ] should return [ -ApiKey ] as a string" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Remove-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.0938" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Remove-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-PokemonTCGAPIKey ] should remove all apiKey variables" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function.Running [ Remove-PokemonTCGAPIKey ] should remove all apiKey variables" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ PokemonTCG_API_Key ] is already empty a warning should be thrown" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function.If the [ PokemonTCG_API_Key ] is already empty a warning should be thrown" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Add-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1242" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Add-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-PokemonTCGBaseURI ] should have an alias of [ Set-PokemonTCGBaseURI ]" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.[ Add-PokemonTCGBaseURI ] should have an alias of [ Set-PokemonTCGBaseURI ]" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.Without parameters should return the default URI" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -BaseURI  should return what was inputted" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.With parameter -BaseURI  should return what was inputted" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -data_center Space should return an error" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.With invalid parameter value -data_center Space should return an error" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Get-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1054" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Get-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0206" asserts="0" description="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The default URI should be returned" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The URI should be a string" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is not set a warning should be thrown" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.If the baseUri is not set a warning should be thrown" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Remove-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.0936" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Remove-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0132" asserts="0" description="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function">
                <results>
                  <test-case description="The baseUri variable should not longer exist" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function.The baseUri variable should not longer exist" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is already gone a warning should be thrown" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function.If the baseUri is already gone a warning should be thrown" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Export-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1387" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Export-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0562" asserts="0" description="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0498" asserts="0" description="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Should export successfully" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Configuration directory should be hidden" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Configuration file should contain required values" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Get-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1262" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Get-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function.Configuration directory should be hidden" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function.Configuration file should contain required values" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Import-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1542" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Import-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0759" asserts="0" description="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0721" asserts="0" description="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2301" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.1483" asserts="0" description="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.1445" asserts="0" description="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITh a saved configuration baseline variables should exist" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function.When imported WITh a saved configuration baseline variables should exist" time="0.0912" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Remove-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.107" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Remove-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.No configuration should throw a warning" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.Saved configuration should be removed" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>