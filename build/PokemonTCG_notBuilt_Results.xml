<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="1797" errors="0" failures="1" not-run="3" inconclusive="0" ignored="0" skipped="7" invalid="0" date="2024-11-03" time="08:39:46">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.22631" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="77.783" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\HelpComment.Tests.ps1" executed="True" result="Ignored" success="True" time="5.9503" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Ignored" success="True" time="2.4446" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.3047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="1.2989" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Add-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains comment based help" time="0.8047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a synopsis" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains at least one usage example" time="0.0638" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a note" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] contains a link" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.008" asserts="0" description="[ Add-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGApiKey ] - Parameter has a description - [ ApiKey ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Parameter has a description - [ ApiKey ]" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGApiKey ].[ Add-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.3574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains comment based help" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a synopsis" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a description" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains at least one usage example" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a note" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] contains a link" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ BaseURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Parameter has a description - [ BaseURI ]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0098" asserts="0" description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Add-PokemonTCGBaseURI ].[ Add-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.4255" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ]" executed="True" result="Success" success="True" time="0.0613" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains comment based help" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a synopsis" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains at least one usage example" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a note" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-PokemonTCGQueryString ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] contains a link" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0118" asserts="0" description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ resourceURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ resourceURI ]" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ uriFilter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Parameter has a description - [ uriFilter ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0051" asserts="0" description="[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ ConvertTo-PokemonTCGQueryString ].[ ConvertTo-PokemonTCGQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.5015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0709" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains comment based help" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a synopsis" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a description" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a note" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] contains a link" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0111" asserts="0" description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Export-PokemonTCGModuleSettings ].[ Export-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.5512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains comment based help" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a synopsis" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a description" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains at least one usage example" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a note" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] contains a link" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Get-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGApiKey ] - Parameter has a description - [ plainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Parameter has a description - [ plainText ]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.013" asserts="0" description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGApiKey ].[ Get-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="1.747" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ]" executed="True" result="Ignored" success="True" time="0.1917" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains comment based help" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a synopsis" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a description" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains at least one usage example" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a note" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] contains a link" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGBaseURI ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Parameter has a description -" time="0.161" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGBaseURI ].[ Get-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.8162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ]" executed="True" result="Success" success="True" time="0.0654" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGCard ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGCard ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] contains a link" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="[ Get-PokemonTCGCard ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ id ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ id ]" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ select ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ select ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ q ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ q ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ orderBy ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ orderBy ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ page ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ page ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ pageSize ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ pageSize ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Parameter has a description - [ allPages ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0233" asserts="0" description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 7  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGCard ].[ Get-PokemonTCGCard ] - Example has example code &amp; description   - [  EXAMPLE 7  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.8587" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a synopsis" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ openConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Parameter has a description - [ openConfFile ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGModuleSettings ].[ Get-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="1.8935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ]" executed="True" result="Ignored" success="True" time="0.0309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGRarity ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGRarity ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Parameter has a description -" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0092" asserts="0" description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGRarity ].[ Get-PokemonTCGRarity ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="1.9556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ]" executed="True" result="Success" success="True" time="0.0583" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSet ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains at least one usage example" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSet ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="[ Get-PokemonTCGSet ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ id ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ id ]" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ select ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ select ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ q ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ q ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ orderBy ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ orderBy ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ page ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ pageSize ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ pageSize ]" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.02" asserts="0" description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSet ].[ Get-PokemonTCGSet ] - Example has example code &amp; description   - [  EXAMPLE 6  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="1.9904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ]" executed="True" result="Ignored" success="True" time="0.0309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSubtype ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSubtype ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Parameter has a description -" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSubtype ].[ Get-PokemonTCGSubtype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="2.0274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ]" executed="True" result="Ignored" success="True" time="0.0332" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGSupertype ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains comment based help" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGSupertype ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Parameter has a description -" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGSupertype ].[ Get-PokemonTCGSupertype ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="2.0626" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ]" executed="True" result="Ignored" success="True" time="0.0314" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ]">
                    <results>
                      <test-case description="[ Get-PokemonTCGType ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-PokemonTCGType ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Parameter has a description -" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0099" asserts="0" description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Get-PokemonTCGType ].[ Get-PokemonTCGType ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="2.1016" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a note" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfFile ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.01" asserts="0" description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Import-PokemonTCGModuleSettings ].[ Import-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="2.1519" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ]">
                    <results>
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains at least one usage example" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a note" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-PokemonTCGRequest ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0129" asserts="0" description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ method ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ method ]" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ resourceURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ resourceURI ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ uriFilter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ uriFilter ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ data ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ data ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ allPages ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Parameter has a description - [ allPages ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Invoke-PokemonTCGRequest ].[ Invoke-PokemonTCGRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="2.193" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ]" executed="True" result="Ignored" success="True" time="0.0362" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains comment based help" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a synopsis" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains at least one usage example" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a note" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGApiKey ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Parameter has a description -" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGApiKey ].[ Remove-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Ignored" success="True" time="2.2358" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ]" executed="True" result="Ignored" success="True" time="0.0339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains comment based help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a synopsis" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a description" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains at least one usage example" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a note" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] contains a link" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGBaseURI ] - Parameter has a description -" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Parameter has a description -" time="0.0038" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0048" asserts="0" description="[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGBaseURI ].[ Remove-PokemonTCGBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="2.289" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains comment based help" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a synopsis" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a description" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains at least one usage example" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a note" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-PokemonTCGModuleSettings ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] contains a link" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ PokemonTCGConfPath ]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ andVariables ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Parameter has a description - [ andVariables ]" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0081" asserts="0" description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Remove-PokemonTCGModuleSettings ].[ Remove-PokemonTCGModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests" executed="True" result="Success" success="True" time="2.3253" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ]">
                    <results>
                      <test-case description="[ Test-PokemonTCGApiKey ] contains comment based help" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains comment based help" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a synopsis" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a description" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains at least one usage example" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains at least one usage example" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a note" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-PokemonTCGApiKey ] contains a link" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] contains a link" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0037" asserts="0" description="[ Test-PokemonTCGApiKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-PokemonTCGApiKey ] - Parameter has a description - [ BaseURI ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Parameter has a description - [ BaseURI ]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0091" asserts="0" description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ HelpComment.Tests.ps1 ].[ PokemonTCG ] module help tests.[ Test-PokemonTCGApiKey ].[ Test-PokemonTCGApiKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PokemonTCG.Tests.ps1" executed="True" result="Success" success="True" time="0.662" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PokemonTCG.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.4804" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data" executed="True" result="Success" success="True" time="0.3551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.2047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test" executed="True" result="Success" success="True" time="0.4757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Module contains only PowerShell files" time="0.0521" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Module files exist" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PokemonTCG.Tests.ps1 ].[ PokemonTCG.psd1 ] module import test.Should import successfully" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Failure" success="False" time="69.1351" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Failure" success="False" time="67.3078" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="3.2408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0614" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0575" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0225" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1449" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0319" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1881" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2338" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2694" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3169" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3625" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4989" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5477" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.1488" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.1488" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7896" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8124" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8333" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8785" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0196" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8991" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9232" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0198" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9715" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9912" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0108" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0525" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0188" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0717" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1115" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1332" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0178" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1746" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1954" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2156" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2416" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0842" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0842" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4659" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5566" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6006" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6513" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7928" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8824" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9259" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0176" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0632" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.108" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2038" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.4528" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.4528" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7075" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7517" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8002" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8458" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8895" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.9329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.9764" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.0195" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.065" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.1065" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.1493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.1929" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.237" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ ConvertTo-PokemonTCGQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\ConvertTo-PokemonTCGQueryString.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="6.8192" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0507" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2592" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.2045" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.2045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3051" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5017" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5431" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5891" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6845" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7301" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7773" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8215" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8845" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.059" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9284" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.951" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9736" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9963" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0192" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0186" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0415" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0181" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.064" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0869" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1094" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0182" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1319" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1674" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2025" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2459" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.267" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3395" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3855" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4316" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4767" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5721" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6177" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6643" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7473" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7934" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8388" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8846" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.93" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9746" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0244" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0652" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.113" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2093" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.256" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3053" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3536" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4455" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9707" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.5212" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.5212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.017" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.109" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.1555" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.2049" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.2489" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.2977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.3437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.3894" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.4348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.4831" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.529" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]" executed="True" result="Success" success="True" time="3.5747" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Invoke-PokemonTCGRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiCalls\Invoke-PokemonTCGRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="9.4762" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0726" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0225" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1153" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1592" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.246" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2889" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3343" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.378" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4221" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4667" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5106" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5555" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6634" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0564" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0564" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7059" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7267" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7477" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7685" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7895" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.81" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8323" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8603" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.906" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9265" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9722" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0176" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9931" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0134" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0346" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0768" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1189" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1404" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1948" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2381" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2811" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3248" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3719" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4185" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.505" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5486" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5929" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6404" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6841" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7278" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7722" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.815" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8612" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9048" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9479" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0366" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0842" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1271" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1705" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2137" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3038" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3474" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4778" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5237" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5669" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Add-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="12.7231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0896" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1333" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.177" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2201" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2635" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3528" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3963" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4398" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4835" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5269" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.573" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6166" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6762" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0555" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0555" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7188" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7392" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7593" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7792" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7999" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8198" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8627" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9078" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9509" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9947" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0824" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2586" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3461" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4787" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5216" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5653" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6118" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6553" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6982" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7423" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7862" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8322" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8758" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9193" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0066" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0529" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0963" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1398" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1844" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2279" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3175" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6436" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.2785" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.2785" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6867" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.733" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7772" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.821" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8663" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9141" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9694" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0502" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.0225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.0653" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.1112" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.155" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.1997" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.2433" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Get-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="15.7845" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0894" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1356" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1813" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2276" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2539" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2974" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3407" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3841" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4277" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4761" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5228" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5665" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6703" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0564" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0564" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7132" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7336" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7733" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7937" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8186" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8623" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9057" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.04" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0835" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1265" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1695" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2584" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3894" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4771" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5201" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6059" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6526" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7397" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7837" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8277" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.917" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9617" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0051" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0938" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1367" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1801" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2232" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2662" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3117" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.355" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.1213" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.1213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.526" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5712" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6123" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.658" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7447" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7945" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8385" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.884" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.9713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.0146" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="3.0578" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Remove-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="18.5925" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.0877" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1259" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.1694" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2132" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2566" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.2998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3439" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.3688" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0209" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4125" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4506" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.4946" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.5384" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.582" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6429" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0565" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0565" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.6862" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7067" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7479" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7685" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.7888" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8093" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8298" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8506" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.8949" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9373" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="0.9563" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0491" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.0942" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1385" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.1682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2112" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2554" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.2994" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3458" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.3898" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4331" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.4769" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5514" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.5945" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.6821" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7283" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.7773" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8413" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.8907" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9366" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="1.9811" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0294" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.0758" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.1629" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2069" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.2976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.3846" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.428" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.4984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5418" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.5857" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.6744" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7168" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.7594" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]" executed="True" result="Success" success="True" time="2.8021" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Test-PokemonTCGApiKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\apiKeys\Test-PokemonTCGApiKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="21.3015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0862" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1292" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1722" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2149" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2574" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3449" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3874" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4305" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4738" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5623" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.667" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0572" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.75" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7898" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8096" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.83" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.85" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8902" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9104" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9305" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9503" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0342" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0531" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0785" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1214" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1649" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2087" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2519" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3413" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3844" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4276" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5597" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6472" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6905" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7362" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7795" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8227" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8662" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0421" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0856" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1293" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1758" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2632" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3072" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3509" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4419" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4851" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5291" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5725" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6165" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6622" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7054" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Add-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Add-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="23.9973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0865" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1332" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1768" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2203" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2637" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3073" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.441" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5283" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0185" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6566" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0546" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0546" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7008" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7411" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7612" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7816" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8217" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8421" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8621" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8821" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9019" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9424" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9624" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0028" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0429" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1215" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1646" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2098" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2536" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.298" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3429" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3865" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4324" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4755" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5637" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6078" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6516" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.787" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.882" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9308" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9794" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0269" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0714" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2494" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2942" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3375" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3817" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4705" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5141" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5577" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6011" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6922" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Get-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="27.0704" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0804" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1243" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.168" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2121" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3027" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3531" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4057" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4493" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4934" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.545" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5944" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6388" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7008" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0579" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0579" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7643" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7883" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.875" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9185" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9626" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1589" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0511" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2043" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2484" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3401" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3838" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4271" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4707" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5146" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5612" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6478" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7811" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8247" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8691" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9122" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0456" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.09" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1338" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1778" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2213" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2472" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2907" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3344" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3776" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4678" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5116" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6003" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6442" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6896" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7775" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8211" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8658" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8928" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0231" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9361" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9798" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0231" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0693" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\baseUri\Remove-PokemonTCGBaseURI.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="30.0848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1911" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.243" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2891" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3328" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0346" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.416" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4594" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5037" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5474" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5834" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6893" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0576" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7311" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7728" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.793" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8137" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8412" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9292" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9727" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0635" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1067" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1495" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.193" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2368" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2836" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3278" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3715" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.415" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4595" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5508" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7244" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7684" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8146" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8595" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9031" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9466" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9909" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0735" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1196" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2092" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2985" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3781" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4125" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4567" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5012" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6007" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6521" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6968" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7419" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7862" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8335" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8781" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9219" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9664" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0108" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Export-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Export-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="33.48" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0938" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1383" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1886" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2342" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2811" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3723" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4164" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5056" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5517" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5958" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6398" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7439" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0999" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0999" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7939" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.844" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8881" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9318" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9782" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0698" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1172" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2537" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2988" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3455" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3903" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4863" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5309" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5863" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0503" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6445" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0533" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.695" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8003" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8635" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0574" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0574" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9159" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9618" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0504" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0973" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1435" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1892" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2356" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2832" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3355" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4026" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0571" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4527" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4999" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5469" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5922" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6443" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6897" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8276" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8753" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9222" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9812" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0538" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.028" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1177" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1657" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2558" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3466" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Get-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="36.5306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2505" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.202" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2935" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3382" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3761" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4239" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4704" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6517" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.702" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7472" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8537" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0579" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0579" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8969" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9177" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9392" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9598" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9807" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0272" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0483" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0691" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1158" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1366" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2262" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2699" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3501" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.394" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4383" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5312" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5755" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6264" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6759" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7659" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.813" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8397" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8827" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9224" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9692" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0664" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1113" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1549" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2038" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2482" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2919" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.336" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4275" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4723" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5174" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5665" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6113" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6518" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7409" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0319" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7851" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8221" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8681" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9121" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0018" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0448" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Import-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Import-PokemonTCGModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="39.657" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.17" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.1227" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.1227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2147" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2592" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.374" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4173" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4611" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5045" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5482" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6373" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.681" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7258" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7693" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8162" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8593" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9025" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9899" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0373" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0813" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1677" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2111" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2547" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3003" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3439" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4762" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6079" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6517" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6948" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.74" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.783" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8266" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8706" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9136" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0458" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0895" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2642" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3084" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3518" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3949" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4402" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4834" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5277" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6151" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6604" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7043" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7475" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7928" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8366" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8825" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9256" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9687" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0116" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0547" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1229" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Initialize-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="42.8118" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2498" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.2026" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.2026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3868" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.43" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4737" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5015" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5933" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6401" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6996" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0508" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.743" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7949" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.87" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0696" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0696" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0683" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0683" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9686" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9905" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0118" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0745" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1191" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1751" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2133" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0292" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2459" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2768" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3219" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3676" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4116" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4535" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4968" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5435" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.588" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6327" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6771" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7268" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7734" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8223" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.869" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0065" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.052" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1449" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1892" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2328" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.277" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3204" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.367" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4114" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5478" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5761" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6214" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6652" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7154" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7647" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8062" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8564" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9052" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.959" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.014" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0618" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Remove-PokemonTCGModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Private\moduleSettings\Remove-PokemonTCGModuleSettings.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="46.0335" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.1701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.1201" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.1201" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.2615" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.3059" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.3529" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.4002" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.4463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.4979" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.543" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.5878" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.6348" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.6786" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7232" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.7823" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0552" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0552" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.8255" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.8497" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.8942" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.9374" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="0.9813" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.029" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.0709" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.1163" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.1604" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.2047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.2495" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.2941" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.324" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.3704" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.4141" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.4576" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.5032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.5312" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.5753" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.6189" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.6631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.7073" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.7519" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.8035" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.8465" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.8897" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.933" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="1.9777" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.0057" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.0467" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.0933" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.1381" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.1822" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.2269" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.2733" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.3171" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.3609" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.4044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.4482" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.4958" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.5408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.6655" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.1208" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.1208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.7559" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8038" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8484" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.8926" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.9377" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="2.982" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.0115" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.0547" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.0987" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.1428" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.1755" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]" executed="True" result="Success" success="True" time="3.218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGCard.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\cards\Get-PokemonTCGCard.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="48.677" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.0864" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.1297" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.1757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.2195" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.263" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.3068" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.3524" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.3983" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.4417" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.4848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.5286" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.5737" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.6178" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.681" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.059" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.7225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.743" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.7638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.7839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8246" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.846" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8668" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.8872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9077" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9281" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9689" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="0.9894" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0102" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0306" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0715" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.0919" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1122" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1327" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.1629" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.026" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.2059" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.2485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.2926" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.3354" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.3818" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.4252" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.4724" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.5187" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.5687" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.6228" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0489" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.675" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.7195" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.7629" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.807" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.8512" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.8793" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.9225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="1.9662" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.01" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.0554" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.1058" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.1514" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.1955" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.2395" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.2839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.3282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.3734" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.4168" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.4602" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.5039" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.5508" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.5942" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]" executed="True" result="Success" success="True" time="2.6396" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGRarity.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\rarities\Get-PokemonTCGRarity.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="51.4708" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.0916" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.115" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0191" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.1465" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.1901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.234" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.2802" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.3267" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.3706" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.4147" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.4457" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.489" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.5334" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.5776" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.6404" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0583" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0583" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.6855" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7075" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7284" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7489" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7695" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.7904" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8119" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8533" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8745" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.8953" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.9164" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.9437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="0.9873" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.0315" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.0757" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.123" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.1664" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.2101" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.2532" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.2977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.3285" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0268" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.3711" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.4153" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.4599" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.5045" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.5482" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.5947" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.6401" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.6839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.7291" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.7746" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.8209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.8657" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9101" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9544" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="1.9994" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.0296" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.0736" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.1184" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.1655" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.2129" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.2625" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.3089" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.3561" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.4037" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.4511" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.4961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.5224" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.5659" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.6098" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.6541" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.7023" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.7462" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]" executed="True" result="Success" success="True" time="2.7901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSet.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\sets\Get-PokemonTCGSet.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="54.3075" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.0914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.1382" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.1863" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.2317" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.276" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.3201" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.3662" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.41" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.4538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.4981" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.5423" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.5861" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.6314" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.6926" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0572" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7345" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.755" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7754" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.7955" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8163" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8366" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.857" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8772" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.8977" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9185" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9385" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9588" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="0.9789" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.0295" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.0732" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.1183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.1624" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.2068" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.2485" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.2914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.3145" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.3578" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.4016" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.4463" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.4901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.5368" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.5803" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.624" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.668" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.7124" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.7593" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.8033" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.8475" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.8926" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.9379" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="1.9809" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.029" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.0732" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.1178" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.1608" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.205" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.2494" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.2966" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.3402" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.3844" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.4273" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.4726" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.5202" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.5648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.6083" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.6526" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.6971" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.7441" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.7885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]" executed="True" result="Success" success="True" time="2.8329" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSubtype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\subtypes\Get-PokemonTCGSubtype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="57.4032" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.0883" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.1349" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.1782" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.2215" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.2651" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.3111" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.3556" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.3998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.4459" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.4901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.5339" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.5781" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.6225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.6632" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.7073" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.728" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.7743" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.8178" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.8636" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9071" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9504" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="0.9971" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0408" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.0849" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.1293" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.1741" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.217" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.2643" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.3097" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.3536" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.3976" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.4406" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.4872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.5321" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.5765" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.6205" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.6634" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.7109" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.7526" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.7999" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.8456" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.8901" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.9347" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="1.978" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.0242" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.0683" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.1126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.1552" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.1987" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.2449" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.289" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.333" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.3769" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.4206" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.4682" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.5124" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.5563" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.6005" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.645" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.6919" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.7363" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.7812" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.8254" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.8694" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.9127" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="2.9593" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="3.0035" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="3.0476" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]" executed="True" result="Success" success="True" time="3.0918" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGSupertype.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\supertypes\Get-PokemonTCGSupertype.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="60.4656" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.0885" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.1208" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.1651" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.209" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.2551" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.2993" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.3437" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.3883" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.4359" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.4798" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.5238" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.5687" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.6133" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.6727" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0553" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.7148" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.736" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.7568" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.7775" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.7986" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.826" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.023" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.8721" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.9167" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="0.961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0049" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.0511" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.095" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.1388" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.2274" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.2751" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.3194" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.3638" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.4074" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.4538" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.4874" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.5394" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.5851" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.6338" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.6808" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.7316" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.776" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.8204" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.8646" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.9105" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="1.9583" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.002" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.0458" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.0897" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.1374" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.1877" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.2386" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.2907" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.3365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.3813" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.4291" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.4739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.5186" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.5631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.6077" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.6531" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.7004" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.7449" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.7889" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.8344" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.8818" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.9263" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="2.9713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="3.0156" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]" executed="True" result="Success" success="True" time="3.0588" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ Get-PokemonTCGType.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\Public\types\Get-PokemonTCGType.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Failure" success="False" time="64.2148" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.0924" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.1365" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.1809" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.2268" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.2742" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.3201" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.3665" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.4108" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.4543" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.4984" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.5425" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.5897" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.6335" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.6775" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.7225" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.7666" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.8129" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.8565" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.9" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.9438" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="0.9878" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.0325" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.081" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.1226" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.1631" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.2433" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.076" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.076" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.2927" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.3395" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.3831" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.4282" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.4731" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.5183" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.5661" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.6107" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.6558" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7288" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.069" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.069" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7728" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.7937" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0165" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.8148" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.8414" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.8713" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.9126" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="1.9573" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.0072" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.0517" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.0995" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.1468" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.1936" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.24" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.2838" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.3278" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.3725" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.4188" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.4648" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.5123" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.5582" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.5933" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.6376" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="2.6784" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Failure" success="False" time="3.3394" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Failure" success="False" time="0.6568" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.6568" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>[0] Expected 0, but got 2.
[1] Expected 'PokemonTCG.psd1 - 107', but got 107.
[2] Expected strings to be the same, but they were different.
Expected length: 21
Actual length:   94
Strings differ at index 0.
Expected: 'PokemonTCG.psd1 - 107'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for FunctionsToExport.  '
           ^
[3] Expected 'PokemonTCG.psd1 - 116', but got 116.
[4] Expected strings to be the same, but they were different.
Expected length: 21
Actual length:   92
Strings differ at index 0.
Expected: 'PokemonTCG.psd1 - 116'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for AliasesToExport.  '
           ^</message>
                              <stack-trace>[0] at ($invoke_Results | Measure-Object).Count | Should -Be 0, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
[1] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[2] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
[3] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[4] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.387" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.41" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0178" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.4616" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.5107" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.5598" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.607" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.6513" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.7003" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]" executed="True" result="Success" success="True" time="3.7455" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psd1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="67.3041" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.0883" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.1319" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.1759" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.2223" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.2656" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.31" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.3528" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.3962" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.4433" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.4872" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.53" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.5739" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.6174" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.6633" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7067" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7516" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.7951" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.839" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.8831" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.9105" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="0.956" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0016" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0444" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.0875" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.13" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.1752" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.218" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.2614" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.3042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.3468" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.3899" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.4377" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.48" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.5241" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.5664" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.61" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.6533" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.6961" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.742" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.7848" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.8291" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.8716" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.9147" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="1.9701" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0498" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0498" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.022" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.0679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1111" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1557" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.1998" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.2432" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.2891" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.3312" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.3738" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.4164" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.4589" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.502" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.5451" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.5914" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.6445" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0488" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.6889" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.7326" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.778" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.8219" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.8679" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.9116" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.9552" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="2.9982" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="3.042" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]" executed="True" result="Success" success="True" time="3.0854" asserts="0" description="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notBuilt ] version of [ PokemonTCG ] with [ PSScriptAnalyzer.tests.ps1 ].[ PokemonTCG ] module PSScriptAnalyzer tests.[ PokemonTCG.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\PokemonTCG\PokemonTCG.psm1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Add-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1624" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Add-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0708" asserts="0" description="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0671" asserts="0" description="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-PokemonTCGAPIKey ] should have an alias of [ Set-PokemonTCGApiKey ]" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.[ Add-PokemonTCGAPIKey ] should have an alias of [ Set-PokemonTCGApiKey ]" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -ApiKey ] should accept a value from the pipeline" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.[ -ApiKey ] should accept a value from the pipeline" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When the parameter [ -ApiKey ] is called it should not return empty" name="Testing the [ notBuilt ] version of [ Add-PokemonTCGAPIKey ] functions with [ Add-PokemonTCGAPIKey.Tests.ps1 ].[ Add-PokemonTCGAPIKey ] testing functions.When the parameter [ -ApiKey ] is called it should not return empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Get-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.3191" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Get-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.2208" asserts="0" description="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function" executed="True" result="Success" success="True" time="0.2171" asserts="0" description="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function">
                <results>
                  <test-case description="When the parameter [ -ApiKey] is called it should not return empty" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.When the parameter [ -ApiKey] is called it should not return empty" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -ApiKey ] should return a secure string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Pipeline  - [ -ApiKey ] should return a secure string" time="0.1894" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -ApiKey ] should return a secure string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Parameter - [ -ApiKey ] should return a secure string" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -plainText ] should return [ -ApiKey ] as a string" name="Testing [ Get-PokemonTCGAPIKey ] function with [ Get-PokemonTCGAPIKey.Tests.ps1 ].[ Get-PokemonTCGAPIKey ] testing function.Using [ -plainText ] should return [ -ApiKey ] as a string" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Remove-PokemonTCGAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1116" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\apiKeys\Remove-PokemonTCGAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-PokemonTCGAPIKey ] should remove all apiKey variables" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function.Running [ Remove-PokemonTCGAPIKey ] should remove all apiKey variables" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ PokemonTCG_API_Key ] is already empty a warning should be thrown" name="Testing [ Remove-PokemonTCGAPIKey ] function with [ Remove-PokemonTCGAPIKey.Tests.ps1 ].[ Remove-PokemonTCGAPIKey ] testing function.If the [ PokemonTCG_API_Key ] is already empty a warning should be thrown" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Add-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.2956" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Add-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.2039" asserts="0" description="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.1999" asserts="0" description="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-PokemonTCGBaseURI ] should have an alias of [ Set-PokemonTCGBaseURI ]" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.[ Add-PokemonTCGBaseURI ] should have an alias of [ Set-PokemonTCGBaseURI ]" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.Without parameters should return the default URI" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -BaseURI  should return what was inputted" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.With parameter -BaseURI  should return what was inputted" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -data_center Space should return an error" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.With invalid parameter value -data_center Space should return an error" time="0.1301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-PokemonTCGBaseURI ] functions with [ Add-PokemonTCGBaseURI.Tests.ps1 ].[ Add-PokemonTCGBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Get-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1211" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Get-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The default URI should be returned" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The URI should be a string" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is not set a warning should be thrown" name="Testing [ Get-PokemonTCGBaseURI ] function with [ Get-PokemonTCGBaseURI.Tests.ps1 ].[ Get-PokemonTCGBaseURI ] testing function.If the baseUri is not set a warning should be thrown" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Remove-PokemonTCGBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1101" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\baseUri\Remove-PokemonTCGBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0201" asserts="0" description="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0115" asserts="0" description="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function">
                <results>
                  <test-case description="The baseUri variable should not longer exist" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function.The baseUri variable should not longer exist" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is already gone a warning should be thrown" name="Testing [ Remove-PokemonTCGBaseURI ] function with [ Remove-PokemonTCGBaseURI.Tests.ps1 ].[ Remove-PokemonTCGBaseURI ] testing function.If the baseUri is already gone a warning should be thrown" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Export-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1941" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Export-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0949" asserts="0" description="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0909" asserts="0" description="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Should export successfully" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Configuration directory should be hidden" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-PokemonTCGModuleSettings ] function with [ Export-PokemonTCGModuleSettings.Tests.ps1 ].[ Export-PokemonTCGModuleSettings ] testing function.Configuration file should contain required values" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Get-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1326" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Get-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0321" asserts="0" description="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function.Configuration directory should be hidden" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-PokemonTCGModuleSettings ] function with [ Get-PokemonTCGModuleSettings.Tests.ps1 ].[ Get-PokemonTCGModuleSettings ] testing function.Configuration file should contain required values" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Import-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1653" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Import-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0629" asserts="0" description="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0586" asserts="0" description="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-PokemonTCGModuleSettings ] function with [ Import-PokemonTCGModuleSettings.Tests.ps1 ].[ Import-PokemonTCGModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2619" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Initialize-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.1614" asserts="0" description="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.1576" asserts="0" description="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITh a saved configuration baseline variables should exist" name="Testing [ Initialize-PokemonTCGModuleSettings ] function with [ Initialize-PokemonTCGModuleSettings.Tests.ps1 ].[ Initialize-PokemonTCGModuleSettings ] testing function.When imported WITh a saved configuration baseline variables should exist" time="0.0946" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Remove-PokemonTCGModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1267" asserts="0" description="C:\Celerium\Projects\_API\PokemonTCG-PowerShellWrapper\tests\Private\moduleSettings\Remove-PokemonTCGModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.No configuration should throw a warning" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.Saved configuration should be removed" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-PokemonTCGModuleSettings ] function with [ Remove-PokemonTCGModuleSettings.Tests.ps1 ].[ Remove-PokemonTCGModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>